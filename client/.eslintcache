[{"C:\\Users\\Lawrence\\Pillminder\\client\\src\\index.js":"1","C:\\Users\\Lawrence\\Pillminder\\client\\src\\App.jsx":"2","C:\\Users\\Lawrence\\Pillminder\\client\\src\\components\\PrivateRoute.jsx":"3","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LandingPage.jsx":"4","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\RegisterPage.jsx":"5","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LoginPage.jsx":"6","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\CreateReminderPage.jsx":"7","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\DashboardPage.jsx":"8"},{"size":712,"mtime":1611475356379,"results":"9","hashOfConfig":"10"},{"size":1605,"mtime":1611475356378,"results":"11","hashOfConfig":"10"},{"size":583,"mtime":1611475356378,"results":"12","hashOfConfig":"10"},{"size":577,"mtime":1611475356381,"results":"13","hashOfConfig":"10"},{"size":2377,"mtime":1611475356381,"results":"14","hashOfConfig":"10"},{"size":1712,"mtime":1611475356381,"results":"15","hashOfConfig":"10"},{"size":5783,"mtime":1611513964083,"results":"16","hashOfConfig":"10"},{"size":2181,"mtime":1611479226614,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hehchx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\Lawrence\\Pillminder\\client\\src\\index.js",[],["39","40"],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\App.jsx",[],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\components\\PrivateRoute.jsx",["41"],"import { Route, Redirect } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase/app';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n\r\n  const isAuthorized = () => {\r\n    return user ? true : false;\r\n  };\r\n\r\n  if (loading) return null;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthorized() ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LandingPage.jsx",["42"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase/app';\r\n\r\nfunction LandingPage() {\r\n  const history = useHistory();\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n\r\n  if (user) {\r\n    history.replace('/dashboard');\r\n  }\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <Link to='/login'>Login</Link>\r\n      <br />\r\n      <Link to='/register'>Register</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\RegisterPage.jsx",[],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LoginPage.jsx",["43"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction LoginPage() {\r\n  const history = useHistory();\r\n\r\n  const onFinish = async (values) => {\r\n    const userCredential = await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password);\r\n    history.push('/dashboard');\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>Login</h2>\r\n      <Form\r\n        {...layout}\r\n        name='basic'\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label='Email'\r\n          name='email'\r\n          rules={[{ required: true, message: 'Please input your email!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Password'\r\n          name='password'\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\CreateReminderPage.jsx",["44"],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\DashboardPage.jsx",["45","46","47","48"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Row, Col, Space } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n  },\r\n  {\r\n    title: 'Details',\r\n    dataIndex: 'details',\r\n    key: 'details',\r\n  },\r\n  {\r\n    title: 'Image',\r\n    dataIndex: 'photoUrl',\r\n    key: 'image',\r\n    render: (photoUrl) => (\r\n      <img style={{ width: '100px', height: '100px' }} src={photoUrl} />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    dataIndex: 'key',\r\n    render: (key, reminder) => (\r\n      <Button\r\n        type='primary'\r\n        danger\r\n        onClick={async () => {\r\n          await firebase.storage().refFromURL(reminder.photoUrl).delete();\r\n          await firebase\r\n            .firestore()\r\n            .collection('users')\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .collection('reminders')\r\n            .doc(key)\r\n            .delete();\r\n        }}\r\n      >\r\n        Delete\r\n      </Button>\r\n    ),\r\n  },\r\n];\r\nfunction DashboardPage() {\r\n  const history = useHistory();\r\n  const [value, loading, error] = useCollection(\r\n    firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection('reminders')\r\n  );\r\n\r\n  let data = [];\r\n  if (!loading) {\r\n    value.forEach((doc) => {\r\n      data.push(Object.assign({ key: doc.id }, doc.data()));\r\n    });\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={8}>\r\n            <Space direction='vertical'>\r\n              <Button onClick={() => history.push('/new-reminder')}>\r\n                Add New Reminder\r\n              </Button>\r\n              <Button onClick={() => firebase.auth().signOut()}>\r\n                Sign Out\r\n              </Button>\r\n            </Space>\r\n          </Col>\r\n          <Col span={16}>\r\n            <Table columns={columns} dataSource={data} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default DashboardPage;\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":25,"nodeType":"55","messageId":"56","endLine":6,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":8,"column":25,"nodeType":"55","messageId":"56","endLine":8,"endColumn":30},{"ruleId":"53","severity":1,"message":"57","line":18,"column":11,"nodeType":"55","messageId":"56","endLine":18,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":22,"column":6,"nodeType":"60","endLine":22,"endColumn":17,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"62","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":23,"column":7,"nodeType":"66","endLine":23,"endColumn":73},{"ruleId":"53","severity":1,"message":"54","line":52,"column":26,"nodeType":"55","messageId":"56","endLine":52,"endColumn":31},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'userCredential' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'onUpload'. Either include it or remove the dependency array. If 'onUpload' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["69"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [onUpload]",{"range":"72","text":"73"},[790,801],"[onUpload]"]