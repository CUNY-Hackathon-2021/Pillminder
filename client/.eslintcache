[{"C:\\Users\\Lawrence\\Pillminder\\client\\src\\index.js":"1","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\RegisterPage.jsx":"2","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LoginPage.jsx":"3","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LandingPage.jsx":"4","C:\\Users\\Lawrence\\Pillminder\\client\\src\\App.jsx":"5","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\DashboardPage.jsx":"6","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\CreateReminderPage.jsx":"7","C:\\Users\\Lawrence\\Pillminder\\client\\src\\components\\PrivateRoute.jsx":"8"},{"size":686,"mtime":1611469843079,"results":"9","hashOfConfig":"10"},{"size":2377,"mtime":1611468169720,"results":"11","hashOfConfig":"10"},{"size":1712,"mtime":1611467502294,"results":"12","hashOfConfig":"10"},{"size":577,"mtime":1611467523967,"results":"13","hashOfConfig":"10"},{"size":1553,"mtime":1611467167232,"results":"14","hashOfConfig":"10"},{"size":1723,"mtime":1611469172464,"results":"15","hashOfConfig":"10"},{"size":5123,"mtime":1611468589739,"results":"16","hashOfConfig":"10"},{"size":583,"mtime":1611467537519,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hehchx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\Users\\Lawrence\\Pillminder\\client\\src\\index.js",[],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\RegisterPage.jsx",[],["40","41"],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LoginPage.jsx",["42"],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport firebase from 'firebase/app';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction LoginPage() {\r\n  const history = useHistory();\r\n\r\n  const onFinish = async (values) => {\r\n    const userCredential = await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password);\r\n    history.push('/dashboard');\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>Login</h2>\r\n      <Form\r\n        {...layout}\r\n        name='basic'\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label='Email'\r\n          name='email'\r\n          rules={[{ required: true, message: 'Please input your email!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Password'\r\n          name='password'\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\LandingPage.jsx",["43"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase/app';\r\n\r\nfunction LandingPage() {\r\n  const history = useHistory();\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n\r\n  if (user) {\r\n    history.replace('/dashboard');\r\n  }\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <Link to='/login'>Login</Link>\r\n      <br />\r\n      <Link to='/register'>Register</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\App.jsx",[],"C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\DashboardPage.jsx",["44","45"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Row, Col, Space } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n  },\r\n  {\r\n    title: 'Details',\r\n    dataIndex: 'details',\r\n    key: 'details',\r\n  },\r\n  {\r\n    title: 'Image',\r\n    dataIndex: 'photoUrl',\r\n    key: 'image',\r\n    render: (photoUrl) => (\r\n      <img style={{ width: '100px', height: '100px' }} src={photoUrl} />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: () => (\r\n      <Button type='primary' danger>\r\n        Delete\r\n      </Button>\r\n    ),\r\n  },\r\n];\r\nfunction DashboardPage() {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  useEffect(async () => {\r\n    const querySnapshot = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection('reminders')\r\n      .get();\r\n\r\n    let data = [];\r\n    let i = 0;\r\n    querySnapshot.forEach((doc) => {\r\n      data.push(Object.assign({ key: i }, doc.data()));\r\n      i++;\r\n    });\r\n    setData(data);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={8}>\r\n          <Space direction='vertical'>\r\n            <Button onClick={() => history.push('/new-reminder')}>\r\n              Add New Reminder\r\n            </Button>\r\n            <Button onClick={() => firebase.auth().signOut()}>Sign Out</Button>\r\n          </Space>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Table columns={columns} dataSource={data} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\pages\\CreateReminderPage.jsx",["46"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport { Space, Input, Upload, Button, Steps, Select } from 'antd';\r\nimport { AiOutlineInbox } from 'react-icons/ai';\r\nimport Webcam from 'react-webcam';\r\nimport firebase from 'firebase/app';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst { Dragger } = Upload;\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\n\r\nconst ImageSelector = ({ onUpload }) => {\r\n  const webcamRef = useRef(null);\r\n\r\n  const capture = useCallback(async () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    const res = await fetch(imageSrc);\r\n    const blob = await res.blob();\r\n    const file = new File([blob], 'unknown.png', { type: 'image/png' });\r\n    // let formData = new FormData();\r\n    // formData.append('image', file)\r\n    // const response = await fetch(uploadUrl, {\r\n    //   method: 'POST',\r\n    //   body: formData,\r\n    // });\r\n    onUpload(file);\r\n  }, [webcamRef]);\r\n\r\n  return (\r\n    <Space direction='horizontal'>\r\n      <div style={{ height: '450px' }}>\r\n        <h2>Upload Prescription Image</h2>\r\n\r\n        <div style={{ height: 375 }}>\r\n          <Dragger\r\n            name='file'\r\n            multiple={false}\r\n            style={{ width: '500px' }}\r\n            beforeUpload={(file) => onUpload(file)}\r\n          >\r\n            <AiOutlineInbox />\r\n            <p>Click or drag file to this area to upload</p>\r\n          </Dragger>\r\n        </div>\r\n      </div>\r\n      <span style={{ fontSize: 24, fontWeight: 700 }}>OR</span>\r\n      <div>\r\n        <h2>Take Photo With Camera</h2>\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          width={500}\r\n          style={{ display: 'flex', alignSelf: 'center' }}\r\n        />\r\n        <Button onClick={capture}>Take Photo</Button>\r\n      </div>\r\n    </Space>\r\n  );\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Upload',\r\n    content: <ImageSelector />,\r\n  },\r\n  {\r\n    title: 'Details',\r\n    content: (\r\n      <div>\r\n        <h3>Reminder Title</h3>\r\n        <Input />\r\n        <h3>Notification Setting</h3>\r\n        <Select defaultValue='both' style={{ width: 170 }}>\r\n          <Option value='both'>SMS and Phone Call</Option>\r\n          <Option value='sms'>SMS only</Option>\r\n          <Option value='phone'>Phone Call only</Option>\r\n        </Select>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\nfunction CreateReminderPage() {\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [notificationSetting, setNotificationSetting] = useState('');\r\n  const [current, setCurrent] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleNotificationSettingChange = (value) => {\r\n    setNotificationSetting(value);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    await firebase.storage().ref(imageSrc.name).put(imageSrc);\r\n    const url = await firebase.storage().ref(imageSrc.name).getDownloadURL();\r\n    await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection('reminders')\r\n      .add({\r\n        title,\r\n        notificationSetting,\r\n        photoUrl: url,\r\n      });\r\n    history.push('/dashboard');\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Space direction='vertical'>\r\n        <h1>Create New Reminder</h1>\r\n        <Steps current={current}>\r\n          {steps.map((item) => (\r\n            <Step key={item.title} title={item.title} />\r\n          ))}\r\n        </Steps>\r\n        <div style={{ width: '1050px' }}>\r\n          {current === 0 && (\r\n            <ImageSelector\r\n              onUpload={(image) => {\r\n                setImageSrc(image);\r\n                setCurrent(current + 1);\r\n                console.log(image);\r\n              }}\r\n            />\r\n          )}\r\n          {current === 1 && (\r\n            <>\r\n              <h3>Reminder Title</h3>\r\n              <Input style={{ width: '30%' }} onChange={handleTitleChange} />\r\n              <h3>Notification Setting</h3>\r\n              <Select\r\n                defaultValue='both'\r\n                style={{ width: 170 }}\r\n                onChange={handleNotificationSettingChange}\r\n              >\r\n                <Option value='both'>SMS and Phone Call</Option>\r\n                <Option value='sms'>SMS only</Option>\r\n                <Option value='phone'>Phone Call only</Option>\r\n              </Select>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {current < steps.length - 1 && (\r\n            <Button onClick={() => setCurrent(current + 1)}>Next</Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button\r\n              style={{ margin: '0 8px' }}\r\n              onClick={() => setCurrent(current - 1)}\r\n            >\r\n              Previous\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button type='primary' onClick={handleCreate}>\r\n              Done\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Space>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateReminderPage;\r\n","C:\\Users\\Lawrence\\Pillminder\\client\\src\\components\\PrivateRoute.jsx",["47"],"import { Route, Redirect } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase/app';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n\r\n  const isAuthorized = () => {\r\n    return user ? true : false;\r\n  };\r\n\r\n  if (loading) return null;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthorized() ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":18,"column":11,"nodeType":"54","messageId":"55","endLine":18,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":8,"column":25,"nodeType":"54","messageId":"55","endLine":8,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":22,"column":7,"nodeType":"59","endLine":22,"endColumn":73},{"ruleId":"60","severity":1,"message":"61","line":38,"column":13,"nodeType":"62","endLine":53,"endColumn":4},{"ruleId":"60","severity":1,"message":"63","line":27,"column":6,"nodeType":"64","endLine":27,"endColumn":17,"suggestions":"65"},{"ruleId":"52","severity":1,"message":"56","line":6,"column":25,"nodeType":"54","messageId":"55","endLine":6,"endColumn":30},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'userCredential' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useCallback has a missing dependency: 'onUpload'. Either include it or remove the dependency array. If 'onUpload' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [onUpload]",{"range":"71","text":"72"},[940,951],"[onUpload]"]